@{
    ViewData["Title"] = "Available Rides";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Available Rides</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        body {
            background: #222;
            color: #fff;
            font-family: 'Poppins', sans-serif;
        }

        .container {
            max-width: 700px;
            margin: 40px auto;
            background: #333;
            border-radius: 10px;
            padding: 30px;
        }

        h2 {
            color: #FFD700;
            text-align: center;
        }

        .ride-list {
            list-style: none;
            padding: 0;
        }

            .ride-list li {
                background: #222;
                margin-bottom: 18px;
                padding: 18px;
                border-radius: 8px;
            }

            .ride-list strong {
                color: #FFD700;
            }

        .accept-btn {
            background: #FFD700;
            color: #222;
            font-weight: bold;
            border: none;
            border-radius: 6px;
            padding: 10px 18px;
            cursor: pointer;
            margin-top: 10px;
        }

            .accept-btn:hover {
                background: #e6c200;
            }

        #rideStatus {
            margin-top: 30px;
            font-size: 18px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Available Rides</h2>
        <div id="ridesList"></div>
        <div id="rideStatus"></div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
    <script>
        let currentRideId = null;
        let signalRConnection = null;

        function renderAvailableRides(rides) {
            const ridesList = document.getElementById('ridesList');
            if (!rides.length) {
                ridesList.innerHTML = '<p>No available rides at the moment.</p>';
                return;
            }
            let html = '<ul class="ride-list">';
            for (const r of rides) {
                html += `<li>
                    <strong>Pickup:</strong> ${r.pickupLocation}<br>
                    <strong>Dropoff:</strong> ${r.dropOffLocation}<br>
                    <strong>Requested:</strong> ${r.rideDateTime ? new Date(r.rideDateTime).toLocaleString() : ''}<br>
                    <button class="accept-btn" onclick="acceptRide(${r.rideID})">Accept & Start Ride</button>
                </li>`;
            }
            html += '</ul>';
            ridesList.innerHTML = html;
        }

        async function loadAvailableRides() {
            const res = await fetch('/Ride/GetAvailableRides');
            const rides = await res.json();
            renderAvailableRides(rides);
        }

        async function acceptRide(rideId) {
            const res = await fetch('/Ride/AcceptRide', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({ rideId })
            });
            if (res.ok) {
                currentRideId = rideId;
                document.getElementById('ridesList').innerHTML = '<p>Ride accepted! Ride is now in progress.</p>';
                document.getElementById('rideStatus').innerText = '🚕 Ride Status: InProgress';
                startSignalR(rideId);
            } else {
                alert('Could not accept ride.');
            }
        }

        function startSignalR(rideId) {
            if (signalRConnection) return;
            signalRConnection = new signalR.HubConnectionBuilder().withUrl("/rideHub").build();
            signalRConnection.on("ReceiveRideStatus", function (status) {
                document.getElementById('rideStatus').innerText = `🚕 Ride Status: ${status}`;
            });
            signalRConnection.start().then(() => {
                signalRConnection.invoke("JoinRideGroup", rideId);
            });
        }

        loadAvailableRides();
    </script>
</body>
</html>